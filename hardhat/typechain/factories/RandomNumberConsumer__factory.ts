/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberConsumer,
  RandomNumberConsumerInterface,
} from "../RandomNumberConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestToRandom",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5073dd3782915140c8f3b190b5d67eac6dc5760c46e973a36085f69e2889c224210f603d836748e7dc00888173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050507f6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f460001b60018190555067016345785d8a000060028190555060805160601c60a05160601c610a3761011c6000396000818160f901526102e001526000818161019a01526102a40152610a376000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630848ded31461005157806342619f661461008157806394985ddd1461009f578063dbdff2c1146100bb575b600080fd5b61006b600480360381019061006691906104d7565b6100d9565b60405161007891906106ed565b60405180910390f35b6100896100f1565b60405161009691906107b6565b60405180910390f35b6100b960048036038101906100b49190610529565b6100f7565b005b6100c3610193565b6040516100d091906106ed565b60405180910390f35b60046020528060005260406000206000915090505481565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017c90610796565b60405180910390fd5b61018f8282610295565b5050565b60006002547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101f19190610694565b60206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610565565b1015610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610776565b60405180910390fd5b6102906001546002546102a0565b905090565b806003819055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610314929190610708565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610341939291906106af565b602060405180830381600087803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610500565b5060006103b584600030600080898152602001908152602001600020546103ff565b90506001600080868152602001908152602001600020546103d691906107fe565b600080868152602001908152602001600020819055506103f6848261043b565b91505092915050565b6000848484846040516020016104189493929190610731565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610450929190610668565b60405160208183030381529060405280519060200120905092915050565b60008135905061047d816109a5565b92915050565b600081519050610492816109bc565b92915050565b6000813590506104a7816109d3565b92915050565b6000813590506104bc816109ea565b92915050565b6000815190506104d1816109ea565b92915050565b6000602082840312156104e957600080fd5b60006104f78482850161046e565b91505092915050565b60006020828403121561051257600080fd5b600061052084828501610483565b91505092915050565b6000806040838503121561053c57600080fd5b600061054a85828601610498565b925050602061055b858286016104ad565b9150509250929050565b60006020828403121561057757600080fd5b6000610585848285016104c2565b91505092915050565b61059781610854565b82525050565b6105a681610872565b82525050565b6105bd6105b882610872565b6108d9565b82525050565b60006105ce826107d1565b6105d881856107dc565b93506105e88185602086016108a6565b6105f18161091c565b840191505092915050565b6000610609602b836107ed565b91506106148261092d565b604082019050919050565b600061062c601f836107ed565b91506106378261097c565b602082019050919050565b61064b8161089c565b82525050565b61066261065d8261089c565b6108e3565b82525050565b600061067482856105ac565b6020820191506106848284610651565b6020820191508190509392505050565b60006020820190506106a9600083018461058e565b92915050565b60006060820190506106c4600083018661058e565b6106d16020830185610642565b81810360408301526106e381846105c3565b9050949350505050565b6000602082019050610702600083018461059d565b92915050565b600060408201905061071d600083018561059d565b61072a6020830184610642565b9392505050565b6000608082019050610746600083018761059d565b6107536020830186610642565b610760604083018561058e565b61076d6060830184610642565b95945050505050565b6000602082019050818103600083015261078f816105fc565b9050919050565b600060208201905081810360008301526107af8161061f565b9050919050565b60006020820190506107cb6000830184610642565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108098261089c565b91506108148361089c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610849576108486108ed565b5b828201905092915050565b600061085f8261087c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156108c45780820151818401526020810190506108a9565b838111156108d3576000848401525b50505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060008201527f7769746820666175636574000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6109ae81610854565b81146109b957600080fd5b50565b6109c581610866565b81146109d057600080fd5b50565b6109dc81610872565b81146109e757600080fd5b50565b6109f38161089c565b81146109fe57600080fd5b5056fea2646970667358221220ee80c9aa41bc61e80002c7321fcf902021371b90a8c2e86e5debc0961d49b3f264736f6c63430008040033";

export class RandomNumberConsumer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberConsumer> {
    return super.deploy(overrides || {}) as Promise<RandomNumberConsumer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RandomNumberConsumer {
    return super.attach(address) as RandomNumberConsumer;
  }
  connect(signer: Signer): RandomNumberConsumer__factory {
    return super.connect(signer) as RandomNumberConsumer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberConsumerInterface {
    return new utils.Interface(_abi) as RandomNumberConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberConsumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberConsumer;
  }
}
